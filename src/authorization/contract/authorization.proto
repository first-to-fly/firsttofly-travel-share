syntax = "proto3";

package ftf_contract;

option go_package = "ftf/ftf_contract";

service Authorization {
  rpc Ping(Empty) returns (Pong) {}

  rpc CheckIfUserHasGlobalPermissions(UserGlobalPermsInput) returns (UserGlobalPermsOutput) {}
  rpc CheckIfUserCanPerformGlobalActions(UserGlobalActionsInput) returns (UserGlobalActionsOutput) {}

  rpc CheckIfUserHasPermissionsOnEachEntities(UserEntityPermissionsInput) returns (UserEntityPermissionsOutput) {}
  rpc CheckIfUserHasPermissionsOnAllEntities(UserEntityPermissionsInput) returns (SimpleResultOutput) {}

  rpc CheckIfUserCanPerformActionsOnEachEntities(UserEntityActionsInput) returns (UserEntityActionsOutput) {}
  rpc CheckIfUserCanPerformActionsOnAllEntities(UserEntityActionsInput) returns (SimpleResultOutput) {}

  rpc GetUserPermissionsOnSolelyEntities(UserPermsOnSolelyEntitiesInput) returns (UserPermsOnSolelyEntitiesOutput) {}
}

message Empty {}

message Pong {
  string message = 1;
}

message SimpleResultOutput {
  bool result = 1;
}

message UserGlobalPermsInput {
  string userID = 1;
  repeated string requiredPermissions = 2;
}

message UserGlobalPermsOutput {
  bool result = 1;
}

message UserGlobalActionsInput {
  string userID = 1;
  repeated string globalActions = 2;
}

message UserGlobalActionsOutput {
  map<string, bool> result = 1;
}

message UserEntityPermissionsInput {
  string userID = 1;
  repeated string oids = 2;
  repeated string requiredPermissions = 3;
}

message UserEntityPermissionsOutput {
  map<string, bool> result = 1;
}

message UserEntityActionsInput {
  string userID = 1;
  repeated string oids = 2;
  repeated string entityActions = 3;
}

message UserEntityActionsOutput {
  map<string, UserEntityPermissionsOutput> result = 1;
}

message UserPermsOnSolelyEntitiesInput {
  string userID = 1;
  repeated string oids = 2;
}

message UserPermsOnSolelyEntitiesOutput {
  map<string, Permissions> result = 1;
}

message Permissions {
  repeated string permissions = 1;
}
