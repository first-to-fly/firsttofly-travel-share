// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.3
// source: authorization.proto

package studio_contract

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorization_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_authorization_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_authorization_proto_rawDescGZIP(), []int{0}
}

type Pong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Pong) Reset() {
	*x = Pong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorization_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pong) ProtoMessage() {}

func (x *Pong) ProtoReflect() protoreflect.Message {
	mi := &file_authorization_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pong.ProtoReflect.Descriptor instead.
func (*Pong) Descriptor() ([]byte, []int) {
	return file_authorization_proto_rawDescGZIP(), []int{1}
}

func (x *Pong) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SimpleResultOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SimpleResultOutput) Reset() {
	*x = SimpleResultOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorization_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleResultOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleResultOutput) ProtoMessage() {}

func (x *SimpleResultOutput) ProtoReflect() protoreflect.Message {
	mi := &file_authorization_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleResultOutput.ProtoReflect.Descriptor instead.
func (*SimpleResultOutput) Descriptor() ([]byte, []int) {
	return file_authorization_proto_rawDescGZIP(), []int{2}
}

func (x *SimpleResultOutput) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type UserGlobalPermsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID              string   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	RequiredPermissions []string `protobuf:"bytes,2,rep,name=requiredPermissions,proto3" json:"requiredPermissions,omitempty"`
}

func (x *UserGlobalPermsInput) Reset() {
	*x = UserGlobalPermsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorization_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGlobalPermsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGlobalPermsInput) ProtoMessage() {}

func (x *UserGlobalPermsInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorization_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGlobalPermsInput.ProtoReflect.Descriptor instead.
func (*UserGlobalPermsInput) Descriptor() ([]byte, []int) {
	return file_authorization_proto_rawDescGZIP(), []int{3}
}

func (x *UserGlobalPermsInput) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UserGlobalPermsInput) GetRequiredPermissions() []string {
	if x != nil {
		return x.RequiredPermissions
	}
	return nil
}

type UserGlobalPermsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UserGlobalPermsOutput) Reset() {
	*x = UserGlobalPermsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorization_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGlobalPermsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGlobalPermsOutput) ProtoMessage() {}

func (x *UserGlobalPermsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_authorization_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGlobalPermsOutput.ProtoReflect.Descriptor instead.
func (*UserGlobalPermsOutput) Descriptor() ([]byte, []int) {
	return file_authorization_proto_rawDescGZIP(), []int{4}
}

func (x *UserGlobalPermsOutput) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type UserGlobalActionsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID        string   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	GlobalActions []string `protobuf:"bytes,2,rep,name=globalActions,proto3" json:"globalActions,omitempty"`
}

func (x *UserGlobalActionsInput) Reset() {
	*x = UserGlobalActionsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorization_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGlobalActionsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGlobalActionsInput) ProtoMessage() {}

func (x *UserGlobalActionsInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorization_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGlobalActionsInput.ProtoReflect.Descriptor instead.
func (*UserGlobalActionsInput) Descriptor() ([]byte, []int) {
	return file_authorization_proto_rawDescGZIP(), []int{5}
}

func (x *UserGlobalActionsInput) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UserGlobalActionsInput) GetGlobalActions() []string {
	if x != nil {
		return x.GlobalActions
	}
	return nil
}

type UserGlobalActionsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result map[string]bool `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *UserGlobalActionsOutput) Reset() {
	*x = UserGlobalActionsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorization_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserGlobalActionsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGlobalActionsOutput) ProtoMessage() {}

func (x *UserGlobalActionsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_authorization_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGlobalActionsOutput.ProtoReflect.Descriptor instead.
func (*UserGlobalActionsOutput) Descriptor() ([]byte, []int) {
	return file_authorization_proto_rawDescGZIP(), []int{6}
}

func (x *UserGlobalActionsOutput) GetResult() map[string]bool {
	if x != nil {
		return x.Result
	}
	return nil
}

type UserEntityPermissionsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID              string   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Oids                []string `protobuf:"bytes,2,rep,name=oids,proto3" json:"oids,omitempty"`
	RequiredPermissions []string `protobuf:"bytes,3,rep,name=requiredPermissions,proto3" json:"requiredPermissions,omitempty"`
}

func (x *UserEntityPermissionsInput) Reset() {
	*x = UserEntityPermissionsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorization_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserEntityPermissionsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserEntityPermissionsInput) ProtoMessage() {}

func (x *UserEntityPermissionsInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorization_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserEntityPermissionsInput.ProtoReflect.Descriptor instead.
func (*UserEntityPermissionsInput) Descriptor() ([]byte, []int) {
	return file_authorization_proto_rawDescGZIP(), []int{7}
}

func (x *UserEntityPermissionsInput) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UserEntityPermissionsInput) GetOids() []string {
	if x != nil {
		return x.Oids
	}
	return nil
}

func (x *UserEntityPermissionsInput) GetRequiredPermissions() []string {
	if x != nil {
		return x.RequiredPermissions
	}
	return nil
}

type UserEntityPermissionsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result map[string]bool `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *UserEntityPermissionsOutput) Reset() {
	*x = UserEntityPermissionsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorization_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserEntityPermissionsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserEntityPermissionsOutput) ProtoMessage() {}

func (x *UserEntityPermissionsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_authorization_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserEntityPermissionsOutput.ProtoReflect.Descriptor instead.
func (*UserEntityPermissionsOutput) Descriptor() ([]byte, []int) {
	return file_authorization_proto_rawDescGZIP(), []int{8}
}

func (x *UserEntityPermissionsOutput) GetResult() map[string]bool {
	if x != nil {
		return x.Result
	}
	return nil
}

type UserEntityActionsInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID        string   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Oids          []string `protobuf:"bytes,2,rep,name=oids,proto3" json:"oids,omitempty"`
	EntityActions []string `protobuf:"bytes,3,rep,name=entityActions,proto3" json:"entityActions,omitempty"`
}

func (x *UserEntityActionsInput) Reset() {
	*x = UserEntityActionsInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorization_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserEntityActionsInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserEntityActionsInput) ProtoMessage() {}

func (x *UserEntityActionsInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorization_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserEntityActionsInput.ProtoReflect.Descriptor instead.
func (*UserEntityActionsInput) Descriptor() ([]byte, []int) {
	return file_authorization_proto_rawDescGZIP(), []int{9}
}

func (x *UserEntityActionsInput) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UserEntityActionsInput) GetOids() []string {
	if x != nil {
		return x.Oids
	}
	return nil
}

func (x *UserEntityActionsInput) GetEntityActions() []string {
	if x != nil {
		return x.EntityActions
	}
	return nil
}

type UserEntityActionsOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result map[string]*UserEntityPermissionsOutput `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UserEntityActionsOutput) Reset() {
	*x = UserEntityActionsOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorization_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserEntityActionsOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserEntityActionsOutput) ProtoMessage() {}

func (x *UserEntityActionsOutput) ProtoReflect() protoreflect.Message {
	mi := &file_authorization_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserEntityActionsOutput.ProtoReflect.Descriptor instead.
func (*UserEntityActionsOutput) Descriptor() ([]byte, []int) {
	return file_authorization_proto_rawDescGZIP(), []int{10}
}

func (x *UserEntityActionsOutput) GetResult() map[string]*UserEntityPermissionsOutput {
	if x != nil {
		return x.Result
	}
	return nil
}

type UserPermsOnSolelyEntitiesInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string   `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Oids   []string `protobuf:"bytes,2,rep,name=oids,proto3" json:"oids,omitempty"`
}

func (x *UserPermsOnSolelyEntitiesInput) Reset() {
	*x = UserPermsOnSolelyEntitiesInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorization_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPermsOnSolelyEntitiesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPermsOnSolelyEntitiesInput) ProtoMessage() {}

func (x *UserPermsOnSolelyEntitiesInput) ProtoReflect() protoreflect.Message {
	mi := &file_authorization_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPermsOnSolelyEntitiesInput.ProtoReflect.Descriptor instead.
func (*UserPermsOnSolelyEntitiesInput) Descriptor() ([]byte, []int) {
	return file_authorization_proto_rawDescGZIP(), []int{11}
}

func (x *UserPermsOnSolelyEntitiesInput) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UserPermsOnSolelyEntitiesInput) GetOids() []string {
	if x != nil {
		return x.Oids
	}
	return nil
}

type UserPermsOnSolelyEntitiesOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result map[string]*Permissions `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UserPermsOnSolelyEntitiesOutput) Reset() {
	*x = UserPermsOnSolelyEntitiesOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorization_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPermsOnSolelyEntitiesOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPermsOnSolelyEntitiesOutput) ProtoMessage() {}

func (x *UserPermsOnSolelyEntitiesOutput) ProtoReflect() protoreflect.Message {
	mi := &file_authorization_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPermsOnSolelyEntitiesOutput.ProtoReflect.Descriptor instead.
func (*UserPermsOnSolelyEntitiesOutput) Descriptor() ([]byte, []int) {
	return file_authorization_proto_rawDescGZIP(), []int{12}
}

func (x *UserPermsOnSolelyEntitiesOutput) GetResult() map[string]*Permissions {
	if x != nil {
		return x.Result
	}
	return nil
}

type Permissions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Permissions []string `protobuf:"bytes,1,rep,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *Permissions) Reset() {
	*x = Permissions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_authorization_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Permissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permissions) ProtoMessage() {}

func (x *Permissions) ProtoReflect() protoreflect.Message {
	mi := &file_authorization_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permissions.ProtoReflect.Descriptor instead.
func (*Permissions) Descriptor() ([]byte, []int) {
	return file_authorization_proto_rawDescGZIP(), []int{13}
}

func (x *Permissions) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

var File_authorization_proto protoreflect.FileDescriptor

var file_authorization_proto_rawDesc = []byte{
	0x0a, 0x13, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x20, 0x0a, 0x04, 0x50, 0x6f, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x2c, 0x0a, 0x12, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x60, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x50, 0x65, 0x72,
	0x6d, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x30, 0x0a, 0x13, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x2f, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x50,
	0x65, 0x72, 0x6d, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x56, 0x0a, 0x16, 0x55, 0x73, 0x65, 0x72, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xa2, 0x01, 0x0a, 0x17, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x4c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x1a, 0x39, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x7a, 0x0a, 0x1a, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x69, 0x64, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xaa, 0x01, 0x0a, 0x1b,
	0x55, 0x73, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x50, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x73, 0x74,
	0x75, 0x64, 0x69, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x39, 0x0a,
	0x0b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6a, 0x0a, 0x16, 0x55, 0x73, 0x65, 0x72,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x69,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x69, 0x64, 0x73, 0x12, 0x24,
	0x0a, 0x0d, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0xd0, 0x01, 0x0a, 0x17, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x4c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x34, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x67,
	0x0a, 0x0b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x42, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4c, 0x0a, 0x1e, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x65, 0x72, 0x6d, 0x73, 0x4f, 0x6e, 0x53, 0x6f, 0x6c, 0x65, 0x6c, 0x79, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x6f, 0x69, 0x64, 0x73, 0x22, 0xd0, 0x01, 0x0a, 0x1f, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65,
	0x72, 0x6d, 0x73, 0x4f, 0x6e, 0x53, 0x6f, 0x6c, 0x65, 0x6c, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x54, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x73, 0x74, 0x75, 0x64,
	0x69, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x65, 0x72, 0x6d, 0x73, 0x4f, 0x6e, 0x53, 0x6f, 0x6c, 0x65, 0x6c, 0x79, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a,
	0x57, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2f, 0x0a, 0x0b, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x32, 0xcb, 0x07, 0x0a, 0x0d, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x04, 0x50,
	0x69, 0x6e, 0x67, 0x12, 0x16, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x15, 0x2e, 0x73, 0x74,
	0x75, 0x64, 0x69, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x50, 0x6f,
	0x6e, 0x67, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x1f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x66, 0x55,
	0x73, 0x65, 0x72, 0x48, 0x61, 0x73, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x25, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x26,
	0x2e, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x50, 0x65, 0x72, 0x6d, 0x73,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x22, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x49, 0x66, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72,
	0x6d, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27,
	0x2e, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x22, 0x00, 0x12, 0x86, 0x01, 0x0a, 0x27, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x66, 0x55,
	0x73, 0x65, 0x72, 0x48, 0x61, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x4f, 0x6e, 0x45, 0x61, 0x63, 0x68, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12,
	0x2b, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x2c, 0x2e, 0x73,
	0x74, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x26,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x66, 0x55, 0x73, 0x65, 0x72, 0x48, 0x61, 0x73, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x6e, 0x41, 0x6c, 0x6c, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x2b, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x81, 0x01, 0x0a, 0x2a, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x49, 0x66, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x50, 0x65, 0x72,
	0x66, 0x6f, 0x72, 0x6d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x6e, 0x45, 0x61, 0x63,
	0x68, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x27, 0x2e, 0x73, 0x74, 0x75, 0x64,
	0x69, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x7b,
	0x0a, 0x29, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x66, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x6e,
	0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4f, 0x6e,
	0x41, 0x6c, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x27, 0x2e, 0x73, 0x74,
	0x75, 0x64, 0x69, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x12, 0x89, 0x01, 0x0a, 0x22,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x4f, 0x6e, 0x53, 0x6f, 0x6c, 0x65, 0x6c, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x2f, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x73, 0x4f, 0x6e,
	0x53, 0x6f, 0x6c, 0x65, 0x6c, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x30, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x65, 0x72, 0x6d, 0x73, 0x4f,
	0x6e, 0x53, 0x6f, 0x6c, 0x65, 0x6c, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x42, 0x18, 0x5a, 0x16, 0x73, 0x74, 0x75, 0x64, 0x69,
	0x6f, 0x2f, 0x73, 0x74, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_authorization_proto_rawDescOnce sync.Once
	file_authorization_proto_rawDescData = file_authorization_proto_rawDesc
)

func file_authorization_proto_rawDescGZIP() []byte {
	file_authorization_proto_rawDescOnce.Do(func() {
		file_authorization_proto_rawDescData = protoimpl.X.CompressGZIP(file_authorization_proto_rawDescData)
	})
	return file_authorization_proto_rawDescData
}

var file_authorization_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_authorization_proto_goTypes = []interface{}{
	(*Empty)(nil),                           // 0: studio_contract.Empty
	(*Pong)(nil),                            // 1: studio_contract.Pong
	(*SimpleResultOutput)(nil),              // 2: studio_contract.SimpleResultOutput
	(*UserGlobalPermsInput)(nil),            // 3: studio_contract.UserGlobalPermsInput
	(*UserGlobalPermsOutput)(nil),           // 4: studio_contract.UserGlobalPermsOutput
	(*UserGlobalActionsInput)(nil),          // 5: studio_contract.UserGlobalActionsInput
	(*UserGlobalActionsOutput)(nil),         // 6: studio_contract.UserGlobalActionsOutput
	(*UserEntityPermissionsInput)(nil),      // 7: studio_contract.UserEntityPermissionsInput
	(*UserEntityPermissionsOutput)(nil),     // 8: studio_contract.UserEntityPermissionsOutput
	(*UserEntityActionsInput)(nil),          // 9: studio_contract.UserEntityActionsInput
	(*UserEntityActionsOutput)(nil),         // 10: studio_contract.UserEntityActionsOutput
	(*UserPermsOnSolelyEntitiesInput)(nil),  // 11: studio_contract.UserPermsOnSolelyEntitiesInput
	(*UserPermsOnSolelyEntitiesOutput)(nil), // 12: studio_contract.UserPermsOnSolelyEntitiesOutput
	(*Permissions)(nil),                     // 13: studio_contract.Permissions
	nil,                                     // 14: studio_contract.UserGlobalActionsOutput.ResultEntry
	nil,                                     // 15: studio_contract.UserEntityPermissionsOutput.ResultEntry
	nil,                                     // 16: studio_contract.UserEntityActionsOutput.ResultEntry
	nil,                                     // 17: studio_contract.UserPermsOnSolelyEntitiesOutput.ResultEntry
}
var file_authorization_proto_depIdxs = []int32{
	14, // 0: studio_contract.UserGlobalActionsOutput.result:type_name -> studio_contract.UserGlobalActionsOutput.ResultEntry
	15, // 1: studio_contract.UserEntityPermissionsOutput.result:type_name -> studio_contract.UserEntityPermissionsOutput.ResultEntry
	16, // 2: studio_contract.UserEntityActionsOutput.result:type_name -> studio_contract.UserEntityActionsOutput.ResultEntry
	17, // 3: studio_contract.UserPermsOnSolelyEntitiesOutput.result:type_name -> studio_contract.UserPermsOnSolelyEntitiesOutput.ResultEntry
	8,  // 4: studio_contract.UserEntityActionsOutput.ResultEntry.value:type_name -> studio_contract.UserEntityPermissionsOutput
	13, // 5: studio_contract.UserPermsOnSolelyEntitiesOutput.ResultEntry.value:type_name -> studio_contract.Permissions
	0,  // 6: studio_contract.Authorization.Ping:input_type -> studio_contract.Empty
	3,  // 7: studio_contract.Authorization.CheckIfUserHasGlobalPermissions:input_type -> studio_contract.UserGlobalPermsInput
	5,  // 8: studio_contract.Authorization.CheckIfUserCanPerformGlobalActions:input_type -> studio_contract.UserGlobalActionsInput
	7,  // 9: studio_contract.Authorization.CheckIfUserHasPermissionsOnEachEntities:input_type -> studio_contract.UserEntityPermissionsInput
	7,  // 10: studio_contract.Authorization.CheckIfUserHasPermissionsOnAllEntities:input_type -> studio_contract.UserEntityPermissionsInput
	9,  // 11: studio_contract.Authorization.CheckIfUserCanPerformActionsOnEachEntities:input_type -> studio_contract.UserEntityActionsInput
	9,  // 12: studio_contract.Authorization.CheckIfUserCanPerformActionsOnAllEntities:input_type -> studio_contract.UserEntityActionsInput
	11, // 13: studio_contract.Authorization.GetUserPermissionsOnSolelyEntities:input_type -> studio_contract.UserPermsOnSolelyEntitiesInput
	1,  // 14: studio_contract.Authorization.Ping:output_type -> studio_contract.Pong
	4,  // 15: studio_contract.Authorization.CheckIfUserHasGlobalPermissions:output_type -> studio_contract.UserGlobalPermsOutput
	6,  // 16: studio_contract.Authorization.CheckIfUserCanPerformGlobalActions:output_type -> studio_contract.UserGlobalActionsOutput
	8,  // 17: studio_contract.Authorization.CheckIfUserHasPermissionsOnEachEntities:output_type -> studio_contract.UserEntityPermissionsOutput
	2,  // 18: studio_contract.Authorization.CheckIfUserHasPermissionsOnAllEntities:output_type -> studio_contract.SimpleResultOutput
	10, // 19: studio_contract.Authorization.CheckIfUserCanPerformActionsOnEachEntities:output_type -> studio_contract.UserEntityActionsOutput
	2,  // 20: studio_contract.Authorization.CheckIfUserCanPerformActionsOnAllEntities:output_type -> studio_contract.SimpleResultOutput
	12, // 21: studio_contract.Authorization.GetUserPermissionsOnSolelyEntities:output_type -> studio_contract.UserPermsOnSolelyEntitiesOutput
	14, // [14:22] is the sub-list for method output_type
	6,  // [6:14] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_authorization_proto_init() }
func file_authorization_proto_init() {
	if File_authorization_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_authorization_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorization_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorization_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleResultOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorization_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGlobalPermsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorization_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGlobalPermsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorization_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGlobalActionsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorization_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserGlobalActionsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorization_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserEntityPermissionsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorization_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserEntityPermissionsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorization_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserEntityActionsInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorization_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserEntityActionsOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorization_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPermsOnSolelyEntitiesInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorization_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPermsOnSolelyEntitiesOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_authorization_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Permissions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_authorization_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_authorization_proto_goTypes,
		DependencyIndexes: file_authorization_proto_depIdxs,
		MessageInfos:      file_authorization_proto_msgTypes,
	}.Build()
	File_authorization_proto = out.File
	file_authorization_proto_rawDesc = nil
	file_authorization_proto_goTypes = nil
	file_authorization_proto_depIdxs = nil
}
